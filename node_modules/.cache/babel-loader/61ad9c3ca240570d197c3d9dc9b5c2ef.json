{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC3\\\\Documents\\\\WEB3\\\\bunzzhack\\\\erc721-minting-boilerplate\\\\react\\\\src\\\\components\\\\Create.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from \"react\";\nimport { useEffect } from 'react';\nimport { NFTStorage, File } from \"nft.storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst nftStorage = new NFTStorage({\n  token: process.env.REACT_APP_NFT_STORAGE_KEY\n});\n\nconst store = async (name, description, data, fileName, type) => {\n  const metadata = await nftStorage.store({\n    name,\n    description,\n    image: new File([data], fileName, {\n      type\n    })\n  });\n  console.log(metadata);\n  return metadata;\n};\n\nexport default function Create({\n  bunzz,\n  userAddress\n}) {\n  _s();\n\n  const [blob, setBlob] = useState(null);\n  const [fileName, setFileName] = useState(null);\n  const [base64, setBase64] = useState(null);\n  const [onGoing, setOnGoing] = useState(false);\n  const [tokenId, setTokenId] = useState(81);\n  const [type, setType] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  let [increment, setIncrement] = useState(0); // useEffect(() => {\n  //   window.localStorage.setItem('tokenId', tokenId);\n  // }, [tokenId]);\n  // useEffect(() => {\n  //   setTokenId(JSON.parse(window.localStorage.getItem('tokenId')));\n  // }, []);\n\n  const select = e => {\n    const file = e.target.files[0];\n    console.log(file);\n\n    if (file) {\n      readAsBlob(file);\n      readAsBase64(file);\n      setType(file.type);\n      setFileName(file.name);\n    }\n  };\n\n  const readAsBlob = file => {\n    const reader = new FileReader();\n    reader.readAsArrayBuffer(file);\n\n    reader.onload = () => {\n      console.log(reader.result);\n      setBlob(reader.result);\n    };\n  };\n\n  const readAsBase64 = file => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => {\n      console.log(reader.result);\n      setBase64(reader.result);\n    };\n  };\n\n  const mintNFT = async () => {\n    console.log('tokenId', tokenId);\n\n    try {\n      const contract = await bunzz.getContract(\"NFT (ERC721)\");\n      const tx = await contract.mint(userAddress, tokenId);\n      const receipt = await tx.wait();\n      const event = receipt.events[0];\n      const _tokenId = event.args[2];\n      console.log('increment1', increment);\n      setTokenId(tokenId + 1);\n      console.log('tokenId', tokenId);\n      await approve();\n      list();\n      setBase64(null);\n      window.alert(\"Succeeded to mint\");\n      console.log('receipt', receipt.events);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const getListing = async () => {\n    try {\n      console.log('grtToken');\n      const contract = await bunzz.getContract(\"Simple Marketplace (For NFT)\");\n      const tx = await contract.getToken(\"4\");\n      console.log('grtToken');\n      const receipt = await tx.wait();\n      console.log('listings', receipt.events);\n    } catch (error) {}\n  };\n\n  const getBalance = async () => {\n    try {\n      const contract = await bunzz.getContract(\"NFT (ERC721)\");\n      const res = await contract.balanceOf(userAddress);\n      console.log('balance', res);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const list = async () => {\n    try {\n      const contract = await bunzz.getContract(\"Simple Marketplace (For NFT)\");\n      const tx = await contract.list(0, 20);\n      const receipt = await tx.wait();\n      console.log('list receipt', receipt.events);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const approve = async () => {\n    try {\n      const contract = await bunzz.getContract(\"NFT (ERC721)\");\n      const res = await contract.approve('0xed3B8a112C2dA5A30BAbdED140b77Cb6F900fBa9', tokenId);\n      console.log('approve', res);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"main\", {\n          role: \"main\",\n          className: \"col-lg-12 mx-auto\",\n          style: {\n            maxWidth: '1000px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content mx-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"g-4 row\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: select\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 13\n              }, this), base64 ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: base64,\n                alt: \"hoge\",\n                className: \"image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 11\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"input\", {\n                size: \"lg\",\n                required: true,\n                type: \"text\",\n                placeholder: \"Name\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                size: \"lg\",\n                required: true,\n                as: \"textarea\",\n                placeholder: \"Description\",\n                value: description,\n                onChange: e => setDescription(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                size: \"lg\",\n                required: true,\n                type: \"number\",\n                placeholder: \"Price in ETH\",\n                value: price,\n                onChange: e => setPrice(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid px-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: mintNFT,\n                  type: \"button\",\n                  class: \"btn btn-primary\",\n                  children: \"Create & List NFT!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: getListing,\n                  type: \"button\",\n                  class: \"btn btn-primary\",\n                  children: \"getListing\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: list,\n                  type: \"button\",\n                  class: \"btn btn-primary\",\n                  children: \"list\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Create, \"BikQOO88u3+k9UMxcJnHSnkg2u8=\");\n\n_c = Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["C:/Users/PC3/Documents/WEB3/bunzzhack/erc721-minting-boilerplate/react/src/components/Create.jsx"],"names":["React","useState","useEffect","NFTStorage","File","nftStorage","token","process","env","REACT_APP_NFT_STORAGE_KEY","store","name","description","data","fileName","type","metadata","image","console","log","Create","bunzz","userAddress","blob","setBlob","setFileName","base64","setBase64","onGoing","setOnGoing","tokenId","setTokenId","setType","setName","price","setPrice","setDescription","increment","setIncrement","select","e","file","target","files","readAsBlob","readAsBase64","reader","FileReader","readAsArrayBuffer","onload","result","readAsDataURL","mintNFT","contract","getContract","tx","mint","receipt","wait","event","events","_tokenId","args","approve","list","window","alert","err","error","getListing","getToken","getBalance","res","balanceOf","maxWidth","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState } from \"react\";\r\nimport { useEffect } from 'react';\r\nimport { NFTStorage, File } from \"nft.storage\";\r\n\r\nconst nftStorage = new NFTStorage({\r\n  token: process.env.REACT_APP_NFT_STORAGE_KEY,\r\n});\r\n\r\nconst store = async (name, description, data, fileName, type) => {\r\n  const metadata = await nftStorage.store({\r\n    name,\r\n    description,\r\n    image: new File([data], fileName, { type }),\r\n  });\r\n  console.log(metadata);\r\n  return metadata;\r\n};\r\n\r\nexport default function Create({ bunzz, userAddress }) {\r\n\r\n  const [blob, setBlob] = useState(null);\r\n  const [fileName, setFileName] = useState(null);\r\n  const [base64, setBase64] = useState(null);\r\n  const [onGoing, setOnGoing] = useState(false);\r\n  const [tokenId, setTokenId] = useState(81);\r\n  const [type, setType] = useState(null);\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  let [increment, setIncrement]=useState(0)\r\n\r\n  \r\n  // useEffect(() => {\r\n  //   window.localStorage.setItem('tokenId', tokenId);\r\n  // }, [tokenId]);\r\n\r\n\r\n  // useEffect(() => {\r\n  //   setTokenId(JSON.parse(window.localStorage.getItem('tokenId')));\r\n  // }, []);\r\n\r\n  \r\n\r\n  const select = (e) => {\r\n    const file = e.target.files[0];\r\n    console.log(file);\r\n\r\n    if (file) {\r\n      readAsBlob(file);\r\n      readAsBase64(file);\r\n      setType(file.type);\r\n      setFileName(file.name);\r\n    }\r\n  };\r\n\r\n  const readAsBlob = (file) => {\r\n    const reader = new FileReader();\r\n    reader.readAsArrayBuffer(file);\r\n    reader.onload = () => {\r\n      console.log(reader.result);\r\n      setBlob(reader.result);\r\n    };\r\n  };\r\n\r\n  const readAsBase64 = (file) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      console.log(reader.result);\r\n      setBase64(reader.result);\r\n    };\r\n  };\r\n\r\n  const mintNFT = async () => {\r\n    console.log('tokenId',tokenId)\r\n\r\n    try {\r\nconst contract = await bunzz.getContract(\"NFT (ERC721)\")\r\n\r\n      const tx = await contract.mint(userAddress, tokenId);\r\n      const receipt = await tx.wait();\r\n      const event = receipt.events[0];\r\n      const _tokenId = event.args[2];\r\n      console.log('increment1',increment)\r\n\r\n    \r\n      setTokenId(tokenId +1);\r\n      console.log('tokenId',tokenId)\r\n      await approve();\r\n\r\n      list();\r\n\r\n      setBase64(null);\r\n      window.alert(\"Succeeded to mint\");\r\n\r\n      console.log('receipt',receipt.events);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  const getListing = async () => {\r\n    try {\r\n      console.log('grtToken')\r\n      const contract = await bunzz.getContract(\"Simple Marketplace (For NFT)\");\r\n      const tx = await contract.getToken(\"4\");\r\n      console.log('grtToken')\r\n\r\n      const receipt = await tx.wait();\r\n  \r\n      console.log('listings',receipt.events);\r\n      \r\n    } catch (error) {\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  const getBalance = async () => {\r\n\r\n    try {\r\nconst contract = await bunzz.getContract(\"NFT (ERC721)\")\r\n\r\n      const res = await contract.balanceOf(userAddress);\r\n      console.log('balance',res);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  const list = async () => {\r\n    try{\r\n      \r\n      const contract = await bunzz.getContract(\"Simple Marketplace (For NFT)\");\r\n      const tx = await contract.list(0,20);\r\n      const receipt = await tx.wait();\r\n  \r\n      console.log('list receipt',receipt.events);\r\n    }catch (err) {\r\n      console.error(err);\r\n    }\r\n\r\n  }\r\n\r\n  const approve = async () => {\r\n    try {\r\n      const contract = await bunzz.getContract(\"NFT (ERC721)\")\r\n      \r\n            const res = await contract.approve('0xed3B8a112C2dA5A30BAbdED140b77Cb6F900fBa9',tokenId);\r\n            console.log('approve',res);\r\n          } catch (err) {\r\n            console.error(err);\r\n          }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid mt-5\">\r\n      <div className=\"row\">\r\n        <main role=\"main\" className=\"col-lg-12 mx-auto\" style={{ maxWidth: '1000px' }}>\r\n          <div className=\"content mx-auto\">\r\n            <div className=\"g-4 row\">\r\n            <input type=\"file\" accept=\"image/*\" onChange={select} />\r\n      {base64 ? (\r\n          <img src={base64} alt=\"hoge\" className=\"image\" />\r\n      ) : (\r\n        <></>\r\n      )}\r\n              <input  size=\"lg\" required type=\"text\" placeholder=\"Name\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        />\r\n              <input  size=\"lg\" required as=\"textarea\" placeholder=\"Description\" value={description}\r\n        onChange={(e) => setDescription(e.target.value)}/>\r\n              <input  size=\"lg\" required type=\"number\" placeholder=\"Price in ETH\" value={price}\r\n        onChange={(e) => setPrice(e.target.value)}/>\r\n              <div className=\"d-grid px-0\">\r\n                <button onClick={mintNFT}  type=\"button\" class=\"btn btn-primary\">\r\n                  Create & List NFT!\r\n                </button>\r\n                <button onClick={getListing}  type=\"button\" class=\"btn btn-primary\">\r\n                getListing\r\n                </button>\r\n                <button onClick={list}  type=\"button\" class=\"btn btn-primary\">\r\n                list\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}