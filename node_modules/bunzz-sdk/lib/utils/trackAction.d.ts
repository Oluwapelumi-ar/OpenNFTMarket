export interface TrackActionBody {
    eventName: 'initializeHandler' | 'callFunction' | 'changePath' | 'changeAccount' | 'changeChainId';
    apiKey: string;
    dappId: string;
    moduleId?: string;
    functionType?: string;
    functionName?: string;
    functionArgs?: string;
    chainId?: string;
    signerAddr?: string;
    host?: string;
    pathname?: string;
}
declare type Params = Pick<TrackActionBody, 'eventName' | 'moduleId' | 'functionType' | 'functionName' | 'functionArgs' | 'pathname' | 'signerAddr' | 'chainId'>;
export declare type TrackActionFunction = (params?: Params) => Promise<void>;
export declare const trackActionWrapper: (apiKey: string, dappId: string, host?: string, pathname?: string, signerAddr?: string, chainId?: string) => (params?: Params) => Promise<void>;
export declare const trackPathChanges: (trackAction: TrackActionFunction) => Promise<void>;
export {};
