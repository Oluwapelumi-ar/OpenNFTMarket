import { ethers } from 'ethers';
import { Contract, ContractConfig } from '../contract/contract';
import { TrackActionFunction } from '../../utils/trackAction';
export declare type CallOption = {
    gasLimit?: string | number;
    gasPrice?: string | number;
    value?: string | number;
};
export declare type ToBlockNumberInput = {
    date: string;
    timezone?: string;
    blocksPerMinute?: number;
};
export declare type ToBlockNumberOutput = {
    timestamp: number;
    block: number;
};
export declare class Handler {
    private readonly provider;
    private readonly signer;
    private readonly trackAction;
    private readonly contracts;
    constructor(provider: ethers.providers.JsonRpcProvider, signer: ethers.providers.JsonRpcSigner, trackAction: TrackActionFunction, contractConfigs?: ContractConfig[]);
    getProvider: () => ethers.providers.JsonRpcProvider;
    getSignerAddress: () => Promise<string>;
    toBlockNumber: (params: ToBlockNumberInput) => Promise<ToBlockNumberOutput>;
    getContract: (contractName: string) => Contract;
    private setContract;
}
